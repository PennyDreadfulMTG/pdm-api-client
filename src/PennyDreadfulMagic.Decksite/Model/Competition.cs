/* 
 * decksite API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using SwaggerDateConverter = PennyDreadfulMagic.Decksite.Client.SwaggerDateConverter;

namespace PennyDreadfulMagic.Decksite.Model
{
    /// <summary>
    /// Competition
    /// </summary>
    [DataContract]
    public partial class Competition :  IEquatable<Competition>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Competition" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="startDate">startDate.</param>
        /// <param name="endDate">endDate.</param>
        /// <param name="topN">topN.</param>
        /// <param name="numDecks">numDecks.</param>
        /// <param name="numReviewed">numReviewed.</param>
        /// <param name="sponsorName">sponsorName.</param>
        /// <param name="seriesName">seriesName.</param>
        /// <param name="type">type.</param>
        /// <param name="seasonId">seasonId.</param>
        /// <param name="decks">decks.</param>
        public Competition(string name = default(string), DateTime? startDate = default(DateTime?), DateTime? endDate = default(DateTime?), int? topN = default(int?), int? numDecks = default(int?), int? numReviewed = default(int?), string sponsorName = default(string), string seriesName = default(string), string type = default(string), int? seasonId = default(int?), List<Deck> decks = default(List<Deck>))
        {
            this.Name = name;
            this.StartDate = startDate;
            this.EndDate = endDate;
            this.TopN = topN;
            this.NumDecks = numDecks;
            this.NumReviewed = numReviewed;
            this.SponsorName = sponsorName;
            this.SeriesName = seriesName;
            this.Type = type;
            this.SeasonId = seasonId;
            this.Decks = decks;
        }
        
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets StartDate
        /// </summary>
        [DataMember(Name="start_date", EmitDefaultValue=false)]
        public DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or Sets EndDate
        /// </summary>
        [DataMember(Name="end_date", EmitDefaultValue=false)]
        public DateTime? EndDate { get; set; }

        /// <summary>
        /// Gets or Sets TopN
        /// </summary>
        [DataMember(Name="top_n", EmitDefaultValue=false)]
        public int? TopN { get; set; }

        /// <summary>
        /// Gets or Sets NumDecks
        /// </summary>
        [DataMember(Name="num_decks", EmitDefaultValue=false)]
        public int? NumDecks { get; set; }

        /// <summary>
        /// Gets or Sets NumReviewed
        /// </summary>
        [DataMember(Name="num_reviewed", EmitDefaultValue=false)]
        public int? NumReviewed { get; set; }

        /// <summary>
        /// Gets or Sets SponsorName
        /// </summary>
        [DataMember(Name="sponsor_name", EmitDefaultValue=false)]
        public string SponsorName { get; set; }

        /// <summary>
        /// Gets or Sets SeriesName
        /// </summary>
        [DataMember(Name="series_name", EmitDefaultValue=false)]
        public string SeriesName { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// Gets or Sets SeasonId
        /// </summary>
        [DataMember(Name="season_id", EmitDefaultValue=false)]
        public int? SeasonId { get; set; }

        /// <summary>
        /// Gets or Sets Decks
        /// </summary>
        [DataMember(Name="decks", EmitDefaultValue=false)]
        public List<Deck> Decks { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Competition {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("  TopN: ").Append(TopN).Append("\n");
            sb.Append("  NumDecks: ").Append(NumDecks).Append("\n");
            sb.Append("  NumReviewed: ").Append(NumReviewed).Append("\n");
            sb.Append("  SponsorName: ").Append(SponsorName).Append("\n");
            sb.Append("  SeriesName: ").Append(SeriesName).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  SeasonId: ").Append(SeasonId).Append("\n");
            sb.Append("  Decks: ").Append(Decks).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as Competition);
        }

        /// <summary>
        /// Returns true if Competition instances are equal
        /// </summary>
        /// <param name="input">Instance of Competition to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Competition input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                ) && 
                (
                    this.TopN == input.TopN ||
                    (this.TopN != null &&
                    this.TopN.Equals(input.TopN))
                ) && 
                (
                    this.NumDecks == input.NumDecks ||
                    (this.NumDecks != null &&
                    this.NumDecks.Equals(input.NumDecks))
                ) && 
                (
                    this.NumReviewed == input.NumReviewed ||
                    (this.NumReviewed != null &&
                    this.NumReviewed.Equals(input.NumReviewed))
                ) && 
                (
                    this.SponsorName == input.SponsorName ||
                    (this.SponsorName != null &&
                    this.SponsorName.Equals(input.SponsorName))
                ) && 
                (
                    this.SeriesName == input.SeriesName ||
                    (this.SeriesName != null &&
                    this.SeriesName.Equals(input.SeriesName))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.SeasonId == input.SeasonId ||
                    (this.SeasonId != null &&
                    this.SeasonId.Equals(input.SeasonId))
                ) && 
                (
                    this.Decks == input.Decks ||
                    this.Decks != null &&
                    this.Decks.SequenceEqual(input.Decks)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.StartDate != null)
                    hashCode = hashCode * 59 + this.StartDate.GetHashCode();
                if (this.EndDate != null)
                    hashCode = hashCode * 59 + this.EndDate.GetHashCode();
                if (this.TopN != null)
                    hashCode = hashCode * 59 + this.TopN.GetHashCode();
                if (this.NumDecks != null)
                    hashCode = hashCode * 59 + this.NumDecks.GetHashCode();
                if (this.NumReviewed != null)
                    hashCode = hashCode * 59 + this.NumReviewed.GetHashCode();
                if (this.SponsorName != null)
                    hashCode = hashCode * 59 + this.SponsorName.GetHashCode();
                if (this.SeriesName != null)
                    hashCode = hashCode * 59 + this.SeriesName.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.SeasonId != null)
                    hashCode = hashCode * 59 + this.SeasonId.GetHashCode();
                if (this.Decks != null)
                    hashCode = hashCode * 59 + this.Decks.GetHashCode();
                return hashCode;
            }
        }
    }

}
