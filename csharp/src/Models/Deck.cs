// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace PennyDreadfulMagic.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class Deck
    {
        /// <summary>
        /// Initializes a new instance of the Deck class.
        /// </summary>
        public Deck()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the Deck class.
        /// </summary>
        public Deck(int? id = default(int?), string name = default(string), System.DateTime? createdDate = default(System.DateTime?), System.DateTime? updatedDate = default(System.DateTime?), int? wins = default(int?), int? losses = default(int?), int? finish = default(int?), int? archetypeId = default(int?), string archetypeName = default(string), string sourceUrl = default(string), int? competitionId = default(int?), string competitionName = default(string), string person = default(string), string decklistHash = default(string), bool? retired = default(bool?), IList<string> colors = default(IList<string>), int? omw = default(int?), int? seasonId = default(int?), IList<DecklistEntry> maindeck = default(IList<DecklistEntry>), IList<DecklistEntry> sideboard = default(IList<DecklistEntry>))
        {
            Id = id;
            Name = name;
            CreatedDate = createdDate;
            UpdatedDate = updatedDate;
            Wins = wins;
            Losses = losses;
            Finish = finish;
            ArchetypeId = archetypeId;
            ArchetypeName = archetypeName;
            SourceUrl = sourceUrl;
            CompetitionId = competitionId;
            CompetitionName = competitionName;
            Person = person;
            DecklistHash = decklistHash;
            Retired = retired;
            Colors = colors;
            Omw = omw;
            SeasonId = seasonId;
            Maindeck = maindeck;
            Sideboard = sideboard;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; private set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created_date")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updated_date")]
        public System.DateTime? UpdatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "wins")]
        public int? Wins { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "losses")]
        public int? Losses { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "finish")]
        public int? Finish { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "archetype_id")]
        public int? ArchetypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "archetype_name")]
        public string ArchetypeName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "source_url")]
        public string SourceUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competition_id")]
        public int? CompetitionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "competition_name")]
        public string CompetitionName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "person")]
        public string Person { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "decklist_hash")]
        public string DecklistHash { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "retired")]
        public bool? Retired { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "colors")]
        public IList<string> Colors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "omw")]
        public int? Omw { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "season_id")]
        public int? SeasonId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maindeck")]
        public IList<DecklistEntry> Maindeck { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sideboard")]
        public IList<DecklistEntry> Sideboard { get; set; }

    }
}
